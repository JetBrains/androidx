// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, js, linuxArm64, linuxX64, macosArm64, macosX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, watchosArm32, watchosArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <org.jetbrains.androidx.savedstate:savedstate>
abstract interface androidx.savedstate/SavedStateRegistryOwner : androidx.lifecycle/LifecycleOwner { // androidx.savedstate/SavedStateRegistryOwner|null[0]
    abstract val savedStateRegistry // androidx.savedstate/SavedStateRegistryOwner.savedStateRegistry|{}savedStateRegistry[0]
        abstract fun <get-savedStateRegistry>(): androidx.savedstate/SavedStateRegistry // androidx.savedstate/SavedStateRegistryOwner.savedStateRegistry.<get-savedStateRegistry>|<get-savedStateRegistry>(){}[0]
}

final class androidx.savedstate/SavedStateRegistry { // androidx.savedstate/SavedStateRegistry|null[0]
    final var isRestored // androidx.savedstate/SavedStateRegistry.isRestored|{}isRestored[0]
        final fun <get-isRestored>(): kotlin/Boolean // androidx.savedstate/SavedStateRegistry.isRestored.<get-isRestored>|<get-isRestored>(){}[0]

    final fun consumeRestoredStateForKey(kotlin/String): androidx.core.bundle/Bundle? // androidx.savedstate/SavedStateRegistry.consumeRestoredStateForKey|consumeRestoredStateForKey(kotlin.String){}[0]
    final fun getSavedStateProvider(kotlin/String): androidx.savedstate/SavedStateRegistry.SavedStateProvider? // androidx.savedstate/SavedStateRegistry.getSavedStateProvider|getSavedStateProvider(kotlin.String){}[0]
    final fun registerSavedStateProvider(kotlin/String, androidx.savedstate/SavedStateRegistry.SavedStateProvider) // androidx.savedstate/SavedStateRegistry.registerSavedStateProvider|registerSavedStateProvider(kotlin.String;androidx.savedstate.SavedStateRegistry.SavedStateProvider){}[0]
    final fun unregisterSavedStateProvider(kotlin/String) // androidx.savedstate/SavedStateRegistry.unregisterSavedStateProvider|unregisterSavedStateProvider(kotlin.String){}[0]

    abstract fun interface SavedStateProvider { // androidx.savedstate/SavedStateRegistry.SavedStateProvider|null[0]
        abstract fun saveState(): androidx.core.bundle/Bundle // androidx.savedstate/SavedStateRegistry.SavedStateProvider.saveState|saveState(){}[0]
    }
}

final class androidx.savedstate/SavedStateRegistryController { // androidx.savedstate/SavedStateRegistryController|null[0]
    final val savedStateRegistry // androidx.savedstate/SavedStateRegistryController.savedStateRegistry|{}savedStateRegistry[0]
        final fun <get-savedStateRegistry>(): androidx.savedstate/SavedStateRegistry // androidx.savedstate/SavedStateRegistryController.savedStateRegistry.<get-savedStateRegistry>|<get-savedStateRegistry>(){}[0]

    final fun performAttach() // androidx.savedstate/SavedStateRegistryController.performAttach|performAttach(){}[0]
    final fun performRestore(androidx.core.bundle/Bundle?) // androidx.savedstate/SavedStateRegistryController.performRestore|performRestore(androidx.core.bundle.Bundle?){}[0]
    final fun performSave(androidx.core.bundle/Bundle) // androidx.savedstate/SavedStateRegistryController.performSave|performSave(androidx.core.bundle.Bundle){}[0]

    final object Companion { // androidx.savedstate/SavedStateRegistryController.Companion|null[0]
        final fun create(androidx.savedstate/SavedStateRegistryOwner): androidx.savedstate/SavedStateRegistryController // androidx.savedstate/SavedStateRegistryController.Companion.create|create(androidx.savedstate.SavedStateRegistryOwner){}[0]
    }
}
