// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, js, linuxArm64, linuxX64, macosArm64, macosX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, watchosArm32, watchosArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <androidx.navigation:navigation-testing>
final class androidx.navigation.testing/TestNavHostController : androidx.navigation/NavHostController { // androidx.navigation.testing/TestNavHostController|null[0]
    constructor <init>() // androidx.navigation.testing/TestNavHostController.<init>|<init>(){}[0]

    final val backStack // androidx.navigation.testing/TestNavHostController.backStack|{}backStack[0]
        final fun <get-backStack>(): kotlin.collections/List<androidx.navigation/NavBackStackEntry> // androidx.navigation.testing/TestNavHostController.backStack.<get-backStack>|<get-backStack>(){}[0]
}

final class androidx.navigation.testing/TestNavigatorState : androidx.navigation/NavigatorState { // androidx.navigation.testing/TestNavigatorState|null[0]
    constructor <init>() // androidx.navigation.testing/TestNavigatorState.<init>|<init>(){}[0]

    final fun createBackStackEntry(androidx.navigation/NavDestination, androidx.core.bundle/Bundle?): androidx.navigation/NavBackStackEntry // androidx.navigation.testing/TestNavigatorState.createBackStackEntry|createBackStackEntry(androidx.navigation.NavDestination;androidx.core.bundle.Bundle?){}[0]
    final fun markTransitionComplete(androidx.navigation/NavBackStackEntry) // androidx.navigation.testing/TestNavigatorState.markTransitionComplete|markTransitionComplete(androidx.navigation.NavBackStackEntry){}[0]
    final fun pop(androidx.navigation/NavBackStackEntry, kotlin/Boolean) // androidx.navigation.testing/TestNavigatorState.pop|pop(androidx.navigation.NavBackStackEntry;kotlin.Boolean){}[0]
    final fun popWithTransition(androidx.navigation/NavBackStackEntry, kotlin/Boolean) // androidx.navigation.testing/TestNavigatorState.popWithTransition|popWithTransition(androidx.navigation.NavBackStackEntry;kotlin.Boolean){}[0]
    final fun prepareForTransition(androidx.navigation/NavBackStackEntry) // androidx.navigation.testing/TestNavigatorState.prepareForTransition|prepareForTransition(androidx.navigation.NavBackStackEntry){}[0]
    final fun push(androidx.navigation/NavBackStackEntry) // androidx.navigation.testing/TestNavigatorState.push|push(androidx.navigation.NavBackStackEntry){}[0]
    final fun restoreBackStackEntry(androidx.navigation/NavBackStackEntry): androidx.navigation/NavBackStackEntry // androidx.navigation.testing/TestNavigatorState.restoreBackStackEntry|restoreBackStackEntry(androidx.navigation.NavBackStackEntry){}[0]
}
