/*
 * Copyright 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import androidx.build.JetbrainsAndroidXPlugin
import androidx.build.AndroidXComposePlugin
import androidx.build.Publish
import org.jetbrains.kotlin.gradle.plugin.KotlinPlatformType

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("AndroidXComposePlugin")
    alias(libs.plugins.kotlinSerialization)
    id("JetbrainsAndroidXPlugin")
}

AndroidXComposePlugin.applyAndConfigureKotlinPlugin(project)
JetbrainsAndroidXPlugin.applyAndConfigure(project)

androidXComposeMultiplatform {
    android()
    desktop()
    darwin()
    js()
    wasm()
}

kotlin {
    sourceSets {
        commonMain {
            dependencies {
                api "org.jetbrains.androidx.core:core-bundle:1.0.0"
                implementation project(":compose:foundation:foundation-layout")
                implementation project(":compose:animation:animation-core")
                api project(":compose:animation:animation")
                api project(":compose:runtime:runtime")
                api project(":compose:runtime:runtime-saveable")
                api project(":compose:ui:ui")
                api "org.jetbrains.androidx.lifecycle:lifecycle-common:2.8.0"
                api "org.jetbrains.androidx.lifecycle:lifecycle-runtime:2.8.0"
                implementation("org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose:2.8.0") {
                    exclude group: "org.jetbrains.compose.runtime"
                }
                api "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel:2.8.0"
                implementation("org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose:2.8.0") {
                    exclude group: "org.jetbrains.compose.runtime"
                    exclude group: "org.jetbrains.compose.ui"
                }
                api "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-savedstate:2.8.0"
                api project(":navigation:navigation-common")
                api project(":navigation:navigation-runtime")
                api "org.jetbrains.androidx.savedstate:savedstate:1.2.0"

                implementation(libs.kotlinStdlibCommon)
                implementation(libs.kotlinSerializationCore)
            }
        }

        androidMain {
            dependsOn(commonMain)
            dependencies {
                api("androidx.activity:activity-compose:1.8.0")
            }
        }

        androidInstrumentedTest {
            dependencies {
                implementation(project(":compose:material:material"))
                implementation project(":compose:test-utils")
                implementation project(":compose:ui:ui-tooling")
                implementation(project(":navigation:navigation-testing"))
                implementation(project(":internal-testutils-navigation"))
                implementation(project(":compose:ui:ui-test-junit4"))
                implementation(project(":lifecycle:lifecycle-common"))
                implementation("androidx.lifecycle:lifecycle-livedata-core:2.7.0")
                implementation(project(":lifecycle:lifecycle-viewmodel"))
                implementation(project(":lifecycle:lifecycle-viewmodel-savedstate"))
                implementation("androidx.activity:activity-ktx:1.8.2")
                implementation("androidx.collection:collection-ktx:1.1.0")
                implementation(libs.testRunner)
                implementation(libs.junit)
                implementation(libs.truth)
            }
        }

        jbMain.dependsOn(commonMain)
        desktopMain.dependsOn(jbMain)
        nativeMain.dependsOn(jbMain)
        webMain.dependsOn(jbMain)

        targets.all { target ->
            if (target.platformType == KotlinPlatformType.native) {
                target.compilations["main"].defaultSourceSet {
                    dependsOn(nativeMain)
                }
            } else if (target.platformType in [
                    KotlinPlatformType.js,
                    KotlinPlatformType.wasm
            ]) {
                target.compilations["main"].defaultSourceSet {
                    dependsOn(webMain)
                }
            }
        }
    }
}

androidx {
    name = "Compose Navigation"
    publish = Publish.SNAPSHOT_AND_RELEASE
    inceptionYear = "2020"
    description = "Compose integration with Navigation"
    legacyDisableKotlinStrictApiMode = true
}

android {
    sourceSets.androidTest.assets.srcDirs +=
            project.rootDir.absolutePath + "/../../golden/navigation/navigation-compose"

    namespace "androidx.navigation.compose"
}
