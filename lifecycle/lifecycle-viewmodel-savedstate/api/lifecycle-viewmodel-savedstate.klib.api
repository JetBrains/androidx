// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, js, linuxArm64, linuxX64, macosArm64, macosX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, watchosArm32, watchosArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-savedstate>
abstract class androidx.lifecycle/AbstractSavedStateViewModelFactory : androidx.lifecycle/ViewModelProvider.Factory { // androidx.lifecycle/AbstractSavedStateViewModelFactory|null[0]
    constructor <init>() // androidx.lifecycle/AbstractSavedStateViewModelFactory.<init>|<init>(){}[0]
    constructor <init>(androidx.savedstate/SavedStateRegistryOwner, androidx.core.bundle/Bundle?) // androidx.lifecycle/AbstractSavedStateViewModelFactory.<init>|<init>(androidx.savedstate.SavedStateRegistryOwner;androidx.core.bundle.Bundle?){}[0]

    open fun <#A1: androidx.lifecycle/ViewModel> create(kotlin.reflect/KClass<#A1>, androidx.lifecycle.viewmodel/CreationExtras): #A1 // androidx.lifecycle/AbstractSavedStateViewModelFactory.create|create(kotlin.reflect.KClass<0:0>;androidx.lifecycle.viewmodel.CreationExtras){0§<androidx.lifecycle.ViewModel>}[0]
    open fun <#A1: androidx.lifecycle/ViewModel> create(kotlin/String, kotlin.reflect/KClass<#A1>, androidx.lifecycle/SavedStateHandle): #A1 // androidx.lifecycle/AbstractSavedStateViewModelFactory.create|create(kotlin.String;kotlin.reflect.KClass<0:0>;androidx.lifecycle.SavedStateHandle){0§<androidx.lifecycle.ViewModel>}[0]
}

final class androidx.lifecycle/SavedStateHandle { // androidx.lifecycle/SavedStateHandle|null[0]
    constructor <init>() // androidx.lifecycle/SavedStateHandle.<init>|<init>(){}[0]
    constructor <init>(kotlin.collections/Map<kotlin/String, kotlin/Any?>) // androidx.lifecycle/SavedStateHandle.<init>|<init>(kotlin.collections.Map<kotlin.String,kotlin.Any?>){}[0]

    final fun <#A1: kotlin/Any?> get(kotlin/String): #A1? // androidx.lifecycle/SavedStateHandle.get|get(kotlin.String){0§<kotlin.Any?>}[0]
    final fun <#A1: kotlin/Any?> getStateFlow(kotlin/String, #A1): kotlinx.coroutines.flow/StateFlow<#A1> // androidx.lifecycle/SavedStateHandle.getStateFlow|getStateFlow(kotlin.String;0:0){0§<kotlin.Any?>}[0]
    final fun <#A1: kotlin/Any?> remove(kotlin/String): #A1? // androidx.lifecycle/SavedStateHandle.remove|remove(kotlin.String){0§<kotlin.Any?>}[0]
    final fun <#A1: kotlin/Any?> set(kotlin/String, #A1?) // androidx.lifecycle/SavedStateHandle.set|set(kotlin.String;0:0?){0§<kotlin.Any?>}[0]
    final fun clearSavedStateProvider(kotlin/String) // androidx.lifecycle/SavedStateHandle.clearSavedStateProvider|clearSavedStateProvider(kotlin.String){}[0]
    final fun contains(kotlin/String): kotlin/Boolean // androidx.lifecycle/SavedStateHandle.contains|contains(kotlin.String){}[0]
    final fun keys(): kotlin.collections/Set<kotlin/String> // androidx.lifecycle/SavedStateHandle.keys|keys(){}[0]
    final fun savedStateProvider(): androidx.savedstate/SavedStateRegistry.SavedStateProvider // androidx.lifecycle/SavedStateHandle.savedStateProvider|savedStateProvider(){}[0]
    final fun setSavedStateProvider(kotlin/String, androidx.savedstate/SavedStateRegistry.SavedStateProvider) // androidx.lifecycle/SavedStateHandle.setSavedStateProvider|setSavedStateProvider(kotlin.String;androidx.savedstate.SavedStateRegistry.SavedStateProvider){}[0]

    final object Companion { // androidx.lifecycle/SavedStateHandle.Companion|null[0]
        final fun createHandle(androidx.core.bundle/Bundle?, androidx.core.bundle/Bundle?): androidx.lifecycle/SavedStateHandle // androidx.lifecycle/SavedStateHandle.Companion.createHandle|createHandle(androidx.core.bundle.Bundle?;androidx.core.bundle.Bundle?){}[0]
        final fun validateValue(kotlin/Any?): kotlin/Boolean // androidx.lifecycle/SavedStateHandle.Companion.validateValue|validateValue(kotlin.Any?){}[0]
    }
}

final val androidx.lifecycle/DEFAULT_ARGS_KEY // androidx.lifecycle/DEFAULT_ARGS_KEY|<get-DEFAULT_ARGS_KEY>(){}[0]
    final fun <get-DEFAULT_ARGS_KEY>(): androidx.lifecycle.viewmodel/CreationExtras.Key<androidx.core.bundle/Bundle> // androidx.lifecycle/DEFAULT_ARGS_KEY.<get-DEFAULT_ARGS_KEY>|<get-DEFAULT_ARGS_KEY>(){}[0]
final val androidx.lifecycle/SAVED_STATE_REGISTRY_OWNER_KEY // androidx.lifecycle/SAVED_STATE_REGISTRY_OWNER_KEY|<get-SAVED_STATE_REGISTRY_OWNER_KEY>(){}[0]
    final fun <get-SAVED_STATE_REGISTRY_OWNER_KEY>(): androidx.lifecycle.viewmodel/CreationExtras.Key<androidx.savedstate/SavedStateRegistryOwner> // androidx.lifecycle/SAVED_STATE_REGISTRY_OWNER_KEY.<get-SAVED_STATE_REGISTRY_OWNER_KEY>|<get-SAVED_STATE_REGISTRY_OWNER_KEY>(){}[0]
final val androidx.lifecycle/VIEW_MODEL_STORE_OWNER_KEY // androidx.lifecycle/VIEW_MODEL_STORE_OWNER_KEY|<get-VIEW_MODEL_STORE_OWNER_KEY>(){}[0]
    final fun <get-VIEW_MODEL_STORE_OWNER_KEY>(): androidx.lifecycle.viewmodel/CreationExtras.Key<androidx.lifecycle/ViewModelStoreOwner> // androidx.lifecycle/VIEW_MODEL_STORE_OWNER_KEY.<get-VIEW_MODEL_STORE_OWNER_KEY>|<get-VIEW_MODEL_STORE_OWNER_KEY>(){}[0]

final fun (androidx.lifecycle.viewmodel/CreationExtras).androidx.lifecycle/createSavedStateHandle(): androidx.lifecycle/SavedStateHandle // androidx.lifecycle/createSavedStateHandle|createSavedStateHandle@androidx.lifecycle.viewmodel.CreationExtras(){}[0]
final fun <#A: androidx.lifecycle/ViewModelStoreOwner & androidx.savedstate/SavedStateRegistryOwner> (#A).androidx.lifecycle/enableSavedStateHandles() // androidx.lifecycle/enableSavedStateHandles|enableSavedStateHandles@0:0(){0§<androidx.savedstate.SavedStateRegistryOwner&androidx.lifecycle.ViewModelStoreOwner>}[0]
